str(p)
predict(m6_forw_aic, newdata=p, type="response")
levels(df$model)
levels(df$fuelType)
levels(df$f.age)
factor(df$model)
levels(df$model)
df$f.model <-factor(df$model)
levels(df$f.model)
colMeans(dfnum)
summary(m6_forw_aic)
df$f.model <-factor(df$model)
df$f.fuelType <- factor(df$fuelType)
df$f.transmission <-factor(df$transmission)
df$f.model
df$f.model[1,]
df$f.model[,1]
df$f.model[1]
p <- data.frame(df$f.model[1], 4, mean(df$engineSize), mean(df$mileage), df$f.fuelType[1], mean(df$year), mean(df$tax), mean(df$mpg), df$f.transmission[1])
str(p)
p <- data.frame(df$f.model[1], df$f.age[4], mean(df$engineSize), mean(df$mileage), df$f.fuelType[1], mean(df$year), mean(df$tax), mean(df$mpg), df$f.transmission[1])
str(p)
levels(df$f.model)
levels(df$f.model)[1]
p <- data.frame(levels(df$f.model)[1], df$f.age[4], mean(df$engineSize), mean(df$mileage), df$f.fuelType[1], mean(df$year), mean(df$tax), mean(df$mpg), df$f.transmission[1])
str(p)
df$f.model[ref]
p <- data.frame(, df$f.age, mean(df$engineSize), mean(df$mileage), df$f.fuelType[1], mean(df$year), mean(df$tax), mean(df$mpg), df$f.transmission[1])
str(p)
p <- data.frame(df$f.model, df$f.age, mean(df$engineSize), mean(df$mileage), df$f.fuelType[1], mean(df$year), mean(df$tax), mean(df$mpg), df$f.transmission[1])
p <- data.frame(df$f.model, df$f.age, mean(df$engineSize), mean(df$mileage), df$f.fuelType[1], mean(df$year), mean(df$tax), mean(df$mpg), df$f.transmission[1])
str(p)
p <- data.frame(relevel(df$f.model, ref=1), df$f.age, mean(df$engineSize), mean(df$mileage), df$f.fuelType[1], mean(df$year), mean(df$tax), mean(df$mpg), df$f.transmission[1])
str(p)
df$f.model[ref=1]
df$f.model[1]
df$f.model[1000]
levels(df$f.model)$1
levels(df$f.model)[1]
f <- levels(df$f.model)[f]
f <- levels(df$f.model)[df$f.model]
p <- data.frame(df$f.model[, 16], df$f.age, mean(df$engineSize), mean(df$mileage), df$f.fuelType[1], mean(df$year), mean(df$tax), mean(df$mpg), df$f.transmission[1])
df$f.transmission <-factor(df$transmission)
summary(df$f.transmission)
summary(df)
str(df)
p <- data.frame(df$f.model[16], df$f.age[4], mean(df$engineSize), mean(df$mileage), df$f.fuelType[1], mean(df$year), mean(df$tax), mean(df$mpg), df$f.transmission[1])
str(p)
df$model
table(df$model)
df$model[c("1 Series"), ]
df$model["1 Series", ]
df["1 Series", ]
df[df$model=="1 Series", ]
df[df$model="1 Series", ]
df[df$model='1 Series', ]
df[df$model=='1 Series', ]
table(df$model)
df[df$model=='A6', ]
df[df$model %in% 'A6' ,]
subset(df, df$model == "1 Series")
subset(df, df$model == '1 Series')
subset(df, df$model == "A6")
subset(df, df$model == "A6")
subset(df, model == "A6")
subset(df, model == "A6")
df
tail(df)
subset(df, price == 17500)
subset(df, model == A6)
subset(df, model == "A6")
subset(df, model == 'A6')
subset(df, model ='A6')
subset(df, model = "A6")
str(df)
subset(df, model = " A6")
subset(df, model == " A6")
subset(df, model == " Golf")
subset(df, model == "Golf")
subset(df, fuelType == "Diesel")
p <- data.frame("Golf", 4, mean(df$engineSize), mean(df$mileage), "Diesel", mean(df$year), mean(df$tax), mean(df$mpg), "Automatic")
str(p)
names(p)[names(p) == "X.Golf."] <- "model"
names(p)[names(p) == "X3"] <- "f.age"
names(p)[names(p) == "mean.df.engineSize."] <- "engineSize"
names(p)[names(p) == "mean.df.mileage."] <- "mileage"
names(p)[names(p) == "X.Diesel."] <- "fuelType"
names(p)[names(p) == "mean.df.year."] <- "year"
names(p)[names(p) == "mean.df.tax."] <- "tax"
p <- data.frame(" Golf", 4, mean(df$engineSize), mean(df$mileage), "Diesel", mean(df$year), mean(df$tax), mean(df$mpg), "Automatic")
names(p)[names(p) == "X.Golf."] <- "model"
names(p)[names(p) == "X3"] <- "f.age"
names(p)[names(p) == "mean.df.engineSize."] <- "engineSize"
names(p)[names(p) == "mean.df.mileage."] <- "mileage"
names(p)[names(p) == "X.Diesel."] <- "fuelType"
names(p)[names(p) == "mean.df.year."] <- "year"
names(p)[names(p) == "mean.df.tax."] <- "tax"
names(p)[names(p) == "mean.df.mpg."] <- "mpg"
names(p)[names(p) == "X.Manual."] <- "transmission"
predict(m6_forw_aic, newdata=p, type="response")
names(p)
names(p)[names(p) == "X.Manual."] <- "transmission"
names(p)
p <- data.frame(" Golf", 4, mean(df$engineSize), mean(df$mileage), "Diesel", mean(df$year), mean(df$tax), mean(df$mpg), "Manual")
names(p)[names(p) == "X.Golf."] <- "model"
names(p)[names(p) == "X4"] <- "f.age"
names(p)[names(p) == "mean.df.engineSize."] <- "engineSize"
names(p)[names(p) == "mean.df.mileage."] <- "mileage"
names(p)[names(p) == "X.Diesel."] <- "fuelType"
names(p)[names(p) == "mean.df.year."] <- "year"
names(p)[names(p) == "mean.df.tax."] <- "tax"
names(p)[names(p) == "mean.df.mpg."] <- "mpg"
names(p)[names(p) == "X.Manual."] <- "transmission"
names(p)
names(df)
names(p)[names(p) == "X..Golf."] <- "model"
names(p)
predict(m6_forw_aic, newdata=p, type="response")
table(df$f.age)
df$f.age$age-Q4
df$f.age[age-Q4]
df$f.age["age-Q4", ]
p <- data.frame(" Golf", df$f.age[4], mean(df$engineSize), mean(df$mileage), "Diesel", mean(df$year), mean(df$tax), mean(df$mpg), "Manual")
str(p)
names(p)
names(p)[names(p) == "X..Golf."] <- "model"
names(p)[names(p) == "df.f.age.4"] <- "f.age"
names(p)[names(p) == "mean.df.engineSize."] <- "engineSize"
names(p)[names(p) == "mean.df.mileage."] <- "mileage"
names(p)[names(p) == "X.Diesel."] <- "fuelType"
names(p)[names(p) == "mean.df.year."] <- "year"
names(p)[names(p) == "mean.df.tax."] <- "tax"
names(p)[names(p) == "mean.df.mpg."] <- "mpg"
names(p)[names(p) == "X.Manual."] <- "transmission"
names(p)
names(p)[names(p) == "df.f.age.4."] <- "f.age"
names(p)
names(df)
predict(m6_forw_aic, newdata=p, type="response")
predict(m6_forw_aic, newdata=p, type="response", interval="confidence")
t.test(df)
t.test(out)
qqPlot(m6_forw_aic, envelope = list(level = 0.99), labels=TRUE)
out <- which(studres(m6_forw_aic) > 2.327135)
dfout<-as.data.frame(out)
count(dfout)
qt(0.01, 4741, lower.tail = F)
hist(rstudent(m6_forw_aic),freq=F)
curve(dt(x, m6_forw_aic$df),col=2,add=T)
qt(0.005, 4741)
dt(0.005, 4741)
qt(0.01, 4741)
qt(0.005, 4741)
qt(0.995, 4741)
out1 <- which(studres(m6_forw_aic) > qt(0.005, 4741))
out2 <- which(studres(m6_forw_aic) <- qt(0.995, 4741))
out1 <- which(studres(m6_forw_aic) > qt(0.005, 4741))
out2 <- which(studres(m6_forw_aic) < qt(0.995, 4741))
dfout1<-as.data.frame(out1)
dfout2 <- as.data.frame(out2)
count(dfout1)
count(dfout2)
out1 <- which(studres(m6_forw_aic) > qt(0.005, 4741))
qt(0.005, 4741)
out1 <- which(studres(m6_forw_aic) < qt(0.005, 4741))
out2 <- which(studres(m6_forw_aic) > qt(0.995, 4741))
dfout1<-as.data.frame(out1)
dfout2 <- as.data.frame(out2)
count(dfout1)
count(dfout2)
str(df)
m6 <- lm(price ~  1, data=df)
m6_forw_aic = step(m6,
scope = price ~ model + transmission + mileage + fuelType + tax + mpg +
engineSize + manufacturer + f.age, direction = "both")
vif(m6_forw_aic)
plot(m6_forw_aic)
bptest(m6_forw_aic)
qqPlot(m6_forw_aic, envelope = list(level = 0.99), labels=TRUE)
out1 <- which(studres(m6_forw_aic) < qt(0.005, 4741))
out2 <- which(studres(m6_forw_aic) > qt(0.995, 4741))
dfout1<-as.data.frame(out1)
dfout2 <- as.data.frame(out2)
count(dfout1)
count(dfout2)
hist(rstudent(m6_forw_aic),freq=F)
curve(dt(x, m6_forw_aic$df),col=2,add=T)
summary(m6_forw_aic)
table(df$model)
table(df$fuelType)
table(df$transmission)
p <- data.frame(" 1 Series", df$f.age[4], mean(df$engineSize), mean(df$mileage), "Diesel", mean(df$tax), mean(df$mpg), "Automatic")
names(p)
lm11 <- lm(price ~ age + I(age^2) , data = df)
maxyear<-max(df$year)
q1<-quantile(maxyear - df$year)[2]
q2<-quantile(maxyear - df$year)[3]
q3<-quantile(maxyear - df$year)[4]
df$f.age <- 0
df$f.age[maxyear - df$year > q3 ] <-3
df$f.age[maxyear - df$year <= q3  ] <-2
df$f.age[maxyear - df$year <= q2 ] <-1
df$f.age[maxyear - df$year <= q1 ] <-0
df$f.age<-factor(df$f.age, labels=c("age-Q1", "age-Q2", "age-Q3", "age-Q4"))
table(df$f.age)
df$age<-maxyear - df$year
lm11 <- lm(price ~ age + I(age^2) , data = df)
summary(lm11)
round(cor(df[, c(2:3, 5, 7:9, 13)]), 2)
# Clean workspace
rm(list=ls())
filepath<-"C:/Users/Alex/Desktop/UPC/1st Semester/Statistical Inference and Modelling/SIM_CarPrices"
getwd()
load(paste0("MyOldCars-Raw.RData"))
summary(df)
#vout <- aq.plot(df[, c(2:3, 5, 7:9)], delta=qchisq(0.95, df=ncol(df[, c(2:3, 5, 7:9)])),alpha=0.05)
par(mfrow=c(1,1))
dis <- Moutlier(df[, c(2:3, 5, 7:9)], quantile = 0.999, plot=F)
plot(dis$md, dis$rd)
text(dis$md,dis$rd,labels=rownames(df))
abline(h=dis$cutoff, lwd=2, col="red")
abline(v=dis$cutoff, lwd=2, col="red")
list_mout <- which( ( dis$md > dis$cutoff ) & (dis$rd > dis$cutoff));
length(list_mout)
df <- df[-list_mout, ]
#df1<-countNA(df)
count_na<-colSums(is.na(df))
count_na
#calcQ(df$price)$souts
# Introduce required packages:
requiredPackages <- c("car","lmtest", "FactoMineR","car", "factoextra","RColorBrewer","ggplot2","dplyr","knitr", "corrplot", "mvoutlier", "chemometrics", "MASS")
#use this function to check if each package is on the local machine
#if a package is installed, it will be loaded
#if any are not, the missing package(s) will be installed and loaded
package.check <- lapply(requiredPackages, FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
})
#verify they are loaded
# search()
#vout <- aq.plot(df[, c(2:3, 5, 7:9)], delta=qchisq(0.95, df=ncol(df[, c(2:3, 5, 7:9)])),alpha=0.05)
par(mfrow=c(1,1))
dis <- Moutlier(df[, c(2:3, 5, 7:9)], quantile = 0.999, plot=F)
plot(dis$md, dis$rd)
text(dis$md,dis$rd,labels=rownames(df))
abline(h=dis$cutoff, lwd=2, col="red")
abline(v=dis$cutoff, lwd=2, col="red")
list_mout <- which( ( dis$md > dis$cutoff ) & (dis$rd > dis$cutoff));
length(list_mout)
df <- df[-list_mout, ]
#df1<-countNA(df)
count_na<-colSums(is.na(df))
count_na
#calcQ(df$price)$souts
maxyear<-max(df$year)
#vout <- aq.plot(df[, c(2:3, 5, 7:9)], delta=qchisq(0.95, df=ncol(df[, c(2:3, 5, 7:9)])),alpha=0.05)
par(mfrow=c(1,1))
dis <- Moutlier(df[, c(2:3, 5, 7:9)], quantile = 0.999, plot=F)
plot(dis$md, dis$rd)
text(dis$md,dis$rd,labels=rownames(df))
abline(h=dis$cutoff, lwd=2, col="red")
abline(v=dis$cutoff, lwd=2, col="red")
list_mout <- which( ( dis$md > dis$cutoff ) & (dis$rd > dis$cutoff));
length(list_mout)
df <- df[-list_mout, ]
#df1<-countNA(df)
count_na<-colSums(is.na(df))
count_na
#calcQ(df$price)$souts
# Clean workspace
rm(list=ls())
filepath<-"C:/Users/Alex/Desktop/UPC/1st Semester/Statistical Inference and Modelling/SIM_CarPrices"
getwd()
load(paste0("MyOldCars-Raw.RData"))
summary(df)
# Introduce required packages:
requiredPackages <- c("car","lmtest", "FactoMineR","car", "factoextra","RColorBrewer","ggplot2","dplyr","knitr", "corrplot", "mvoutlier", "chemometrics", "MASS")
#use this function to check if each package is on the local machine
#if a package is installed, it will be loaded
#if any are not, the missing package(s) will be installed and loaded
package.check <- lapply(requiredPackages, FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
})
#verify they are loaded
# search()
#vout <- aq.plot(df[, c(2:3, 5, 7:9)], delta=qchisq(0.95, df=ncol(df[, c(2:3, 5, 7:9)])),alpha=0.05)
par(mfrow=c(1,1))
dis <- Moutlier(df[, c(2:3, 5, 7:9)], quantile = 0.999, plot=F)
plot(dis$md, dis$rd)
text(dis$md,dis$rd,labels=rownames(df))
abline(h=dis$cutoff, lwd=2, col="red")
abline(v=dis$cutoff, lwd=2, col="red")
list_mout <- which( ( dis$md > dis$cutoff ) & (dis$rd > dis$cutoff));
length(list_mout)
df <- df[-list_mout, ]
#df1<-countNA(df)
count_na<-colSums(is.na(df))
count_na
#calcQ(df$price)$souts
maxyear<-max(df$year)
q1<-quantile(maxyear - df$year)[2]
q2<-quantile(maxyear - df$year)[3]
q3<-quantile(maxyear - df$year)[4]
df$f.age <- 0
df$f.age[maxyear - df$year > q3 ] <-3
df$f.age[maxyear - df$year <= q3  ] <-2
df$f.age[maxyear - df$year <= q2 ] <-1
df$f.age[maxyear - df$year <= q1 ] <-0
df$f.age<-factor(df$f.age, labels=c("age-Q1", "age-Q2", "age-Q3", "age-Q4"))
table(df$f.age)
df$age<-maxyear - df$year
round(cor(df[, c(2:3, 5, 7:9, 13)]), 2)
summary(m6_forw_aic)
m6 <- lm(price ~  1, data=df)
m6_forw_aic = step(m6,
scope = price ~ model + transmission + mileage + fuelType + tax + mpg +
engineSize + manufacturer + f.age, direction = "both")
summary(m6_forw_aic)
subset(df, model=" 2 Series")
subset(df, model=" Scirocco")
subset(df, model=" Caravelle")
logm1 <- lm(log(price) ~ ., data=dfnum)
summary(logm1)
bptest(logm1)
logm1 <- lm(log(price) ~ ., data=dfnum)
str(df)
dfnum <- df[, c(2, 3, 5, 7:9)]
round(cor(df[, c(2:3, 5, 7:9)]), 2)
logm1 <- lm(log(price) ~ ., data=dfnum)
summary(logm1)
bptest(logm1)
logm2 <- lm(price ~ boxCoxVariable(price) + year + mileage + tax + mpg + engineSize, data=dfnum)
summary(logm2)
boxcox(price ~ . , data=dfnum)
m7 <- lm(price ~  1, data=df)
m7_forw_aic = step(m7,
scope = price ~ boxCoxVariable(price) + model + transmission + mileage + fuelType + tax + mpg +engineSize + manufacturer + f.age, direction = "both")
summary(m7_forw_aic)
summary(logm2)
m7 <- lm(price ~  1, data=df)
m7_forw_aic = step(m7,
scope = price ~ boxCoxVariable(price) + model + transmission + mileage + fuelType + tax + mpg +engineSize + manufacturer + f.age, direction = "both")
summary(m7_forw_aic)
vif(m7_forw_aic)
plot(m7_forw_aic)
3
qqPlot(m7_forw_aic, envelope = list(level = 0.99), labels=TRUE)
out1 <- which(studres(m6_forw_aic) < qt(0.005, 4742))
out2 <- which(studres(m6_forw_aic) > qt(0.995, 4742))
dfout1<-as.data.frame(out1)
dfout2 <- as.data.frame(out2)
count(dfout1)
count(dfout2)
hist(rstudent(m6_forw_aic),freq=F)
curve(dt(x, m6_forw_aic$df),col=2,add=T)
head(out1)
hat <- hatvalues(m7_forw_aic)
#Atypical values:
length(hat[hat > 3*mean(hat)])
influencePlot(m7_forw_aic)
abline(v=3*mean(hat), col="red")
cooks <- cooks.distance(m7_forw_aic)
#Influential:
length(cooks[cooks > 1])
plot(m7_forw_aic)
which(length(cooks[cooks > 1]))
which((cooks[cooks > 1]))
which(cooks>1)
which(cooks[cooks > 1])
cooks[cooks > 1]
cooks[734, ]
cooks[734]
cooks[4833]
table(df$model)
table(df$fuelType)
table(df$transmission)
p <- data.frame(model=" 1 Series", f.age= df$f.age[4], engineSize = mean(df$engineSize),  mileage = mean(df$mileage), fuelType = "Diesel",  tax = mean(df$tax), mpg= mean(df$mpg), transmission = "Automatic")
names(p)
predict(m7_forw_aic, newdata=p, type="response", interval="confidence")
m8 <- lm(price ~  1, data=df)
m8_forw_aic = step(m8,
scope = log(price) ~  model + transmission + mileage + fuelType + tax + mpg +engineSize + manufacturer + f.age, direction = "both")
summary(m8_forw_aic)
predict(m8_forw_aic, newdata=p, type="response", interval="confidence")
out3 <- hat[hat > 3*mean(hat)]
out3
out1 <- as.data.frame(out1)
out2 <- as.data.frame(out2)
out1
out1 <- which(studres(m6_forw_aic) < qt(0.005, 4742))
out2 <- which(studres(m6_forw_aic) > qt(0.995, 4742))
length(out1)
length(out2)
out4 <- cooks[cooks>1]
out4
#Influential:
length(cooks[cooks > 1])
cooks <- cooks.distance(m7_forw_aic)
#Influential:
length(cooks[cooks > 1])
plot(m7_forw_aic)
out4 <- c(734, 995, 2561, 3194, 4833)
dfnew <-df
df[-out1]
out1
df[-out1,]
dim(df[-out1,])
dfnew<- dfnew[-out1,]
dfnew <- dfnew[-out2,]
dfnew <- dfnew[-out3,]
dfnew <-df
dfnew <- dfnew[-out1,]
dfnew <- dfnew[-out2,]
dfnew <- dfnew[-out3,]
dfnew <- dfnew[-out4,]
dfnew <-df
length(out1)
dfnew <- dfnew[-out1,]
length(out2)
dfnew <- dfnew[-out2,]
length(out3)
dfnew <- dfnew[-out3,]
out3
names(out3)
names(out1)
names(out1)
names(out2)
names(out3)
dfnew <-df
length(out1)
dfnew <- dfnew[-names(out1),]
out1 <- names(out1)
out1 <- as.numeric(names(out1))
out1
out1 <- numeric(names(out1))
out1
dfnew <- dfnew[!row.names(dfnew) %in% names(out1),]
row.names(dfnew)
names(out1)
out1 <- which(studres(m6_forw_aic) < qt(0.005, 4742))
out2 <- which(studres(m6_forw_aic) > qt(0.995, 4742))
names(out1)
dfnew <- dfnew[!row.names(dfnew) %in% names(out1),]
out3 <- hat[hat > 3*mean(hat)]
out2 <- which(studres(m6_forw_aic) > qt(0.995, 4742))
length(out2)
dfnew <- dfnew[!row.names(dfnew) %in% names(out2)]
dfnew <- dfnew[!row.names(dfnew) %in% names(out2),]
length(out3)
dfnew <- dfnew[!row.names(dfnew) %in% names(out3),]
length(out4)
dfnew <- dfnew[!row.names(dfnew) %in% names(out4),]
out4
out4 <- c("734", "995", "2561", "3194", "4833")
length(out4)
dfnew <- dfnew[!row.names(dfnew) %in% names(out4),]
out1[names(out1) %in% out4]
out2[names(out2) %in% out4]
out3[names(out3) %in% out4]
out3
out4
out2
out1
dfnew[734,]
dfnew[row.names(dfnew)=="734",]
dfnew[row.names(dfnew)==734,]
names(out2)
plot(m7_forw_aic)
dfnew[734,]
df[734,]
df[734,]
df[995,]
df[2561,]
df[3194,]
cooks <- cooks.distance(m7_forw_aic)
is.na(cooks)
cooksout<-cooks[is.na(cooks)]
cooksout
out4<-cooks[is.na(cooks)]
length(out4)
dfnew <- dfnew[!row.names(dfnew) %in% names(out4),]
out1
out2
out3
m9 <- lm(price ~  1, data=dfnew)
m9_forw_aic = step(m9,
scope = log(price) ~  model + transmission + mileage + fuelType + tax + mpg +engineSize + manufacturer + f.age, direction = "both")
predict(m9_forw_aic, newdata=p, type="response", interval="confidence")
predict(m8_forw_aic, newdata=p, type="response", interval="confidence")
qqPlot(m7_forw_aic, envelope = list(level = 0.99), labels=TRUE)
m5_forw_aic = step(m5,
scope = price ~ tax + mileage + mpg + year + engineSize,
direction = "forward", trace=0)
m5 <- lm(price ~  1, data=dfnum)
m5_forw_aic = step(m5,
scope = price ~ tax + mileage + mpg + year + engineSize,
direction = "forward", trace=0)
summary(m5_forw_aic)
summary(m8_forw_aic)$intercept
summary(m8_forw_aic)$intercepts
summary(m8_forw_aic)[1]
summary(m8_forw_aic)[2]
summary(m8_forw_aic)[3]
summary(m8_forw_aic)[4]
summary(m8_forw_aic)[5]
summary(m8_forw_aic)[6]
summary(m8_forw_aic)[7]
